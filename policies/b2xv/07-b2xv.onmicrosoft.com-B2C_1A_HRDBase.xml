<TrustFrameworkPolicy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.microsoft.com/online/cpim/schemas/2013/06" PolicySchemaVersion="0.3.0.0" TenantId="b2xv.onmicrosoft.com" PolicyId="B2C_1A_07-HRD_Base" PublicPolicyUri="http://b2xv.onmicrosoft.com/B2C_1A_07-HRD_Base">
  <BasePolicy>
    <TenantId>b2xv.onmicrosoft.com</TenantId>
    <PolicyId>B2C_1A_06-AuthZ_Base</PolicyId>
  </BasePolicy>
  <BuildingBlocks>
    <ClaimsSchema>
      <!-- HRD -->
      <ClaimType Id="loginHint">
        <DisplayName>Login Hint</DisplayName>
        <DataType>string</DataType>
      </ClaimType>
      <ClaimType Id="idp">
        <DisplayName>idp</DisplayName>
        <DataType>string</DataType>
      </ClaimType>
      <ClaimType Id="hrd_InternalLoginHint">
        <DisplayName>use aad</DisplayName>
        <DataType>string</DataType>
      </ClaimType>
      <ClaimType Id="hrd_NamespaceType">
        <DisplayName>namespacetype</DisplayName>
        <DataType>string</DataType>
      </ClaimType>
      <ClaimType Id="hrd_IsFederated">
        <DisplayName>namespacetype</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="hrd_IsManaged">
        <DisplayName>namespacetype</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="hrd_IsManagedOrFederated">
        <DisplayName>use aad</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="hrd_IsAAD">
        <DisplayName>use aad</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="hrd_IsConsumerDomain">
        <DisplayName>use aad</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="hrd_IsViralDomain">
        <DisplayName>use aad</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="hrd_IsViralOrConsumer">
        <DisplayName>use aad</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="hrd_NotViralOrConsumer">
        <DisplayName>use aad</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
    </ClaimsSchema>
    <ClaimsTransformations>
      <ClaimsTransformation Id="SetFederated" TransformationMethod="StringContains">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="hrd_NamespaceType" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="contains" DataType="string" Value="federated" />
          <InputParameter Id="ignoreCase" DataType="string" Value="true" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="hrd_IsFederated" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="SetManaged" TransformationMethod="StringContains">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="hrd_NamespaceType" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="contains" DataType="string" Value="managed" />
          <InputParameter Id="ignoreCase" DataType="string" Value="true" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="hrd_IsManaged" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="SetIsViralOrConsumer" TransformationMethod="OrClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="hrd_IsConsumerDomain" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="hrd_IsViralDomain" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="hrd_IsViralOrConsumer" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="SetIsManagedOrFederated" TransformationMethod="OrClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="hrd_IsManaged" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="hrd_IsFederated" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="hrd_IsManagedOrFederated" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="SetIsAAD" TransformationMethod="AndClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="hrd_NotViralOrConsumer" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="hrd_IsManagedOrFederated" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="hrd_IsAAD" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="SetNotViralOrConsumer" TransformationMethod="NotClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="hrd_IsViralOrConsumer" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="hrd_NotViralOrConsumer" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
    </ClaimsTransformations>
  </BuildingBlocks>
  <ClaimsProviders>
    <!-- <ClaimsProvider>
      <Domain>aad</Domain>
      <DisplayName>Common AAD</DisplayName>
      <TechnicalProfiles>
        <TechnicalProfile Id="Common-AAD">
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="loginHint" PartnerClaimType="login_hint" DefaultValue="{OIDC:LoginHint}" />
            <InputClaim ClaimTypeReferenceId="hrd_InternalLoginHint" PartnerClaimType="login_hint" />
          </InputClaims>
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider> -->
    <!--HRD stuff modified from https://github.com/ahelland/Identity-CodeSamples-v2-->
    <ClaimsProvider>
      <!-- Used to acquire email address from user for subsequent HRD lookup -->
      <DisplayName>SelfAsserted</DisplayName>
      <TechnicalProfiles>
        <TechnicalProfile Id="SelfAsserted-EmailCollect">
          <DisplayName>Email</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.selfasserted.profileupdate</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="email" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="email" />
          </OutputClaims>
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>
    <ClaimsProvider>
      <DisplayName>REST APIs - HRD</DisplayName>
      <TechnicalProfiles>
        <TechnicalProfile Id="HRD_Function">
          <DisplayName>Do an IdP lookup based on email</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ServiceUrl">https://b2c-authz.azurewebsites.net/api/hrd?code=9Q8i/38JEsmWZezCeVcgsQcP33oaJbBaAARX8iaet5UaiY0PKBUMUg==</Item>
            <Item Key="AuthenticationType">None</Item>
            <Item Key="SendClaimsIn">Body</Item>
            <Item Key="AllowInsecureAuthInProduction">true</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="email" PartnerClaimType="emailAddress" DefaultValue="{OIDC:LoginHint}" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="idp" />
            <OutputClaim ClaimTypeReferenceId="signInName" />
            <OutputClaim ClaimTypeReferenceId="hrd_InternalLoginHint" PartnerClaimType="signInName" />
          </OutputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>
    <ClaimsProvider>
      <DisplayName>REST APIs - HRD</DisplayName>
      <TechnicalProfiles>
        <TechnicalProfile Id="HRD_UserRealm_Function">
          <DisplayName>Do an IdP lookup based on email</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ServiceUrl">https://login.microsoftonline.com/common/UserRealm/{email}?api-version=2.0</Item>
            <Item Key="AuthenticationType">None</Item>
            <Item Key="SendClaimsIn">Url</Item>
            <Item Key="AllowInsecureAuthInProduction">true</Item>
            <Item Key="IncludeClaimResolvingInClaimsHandling">true</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="email" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="signInName" PartnerClaimType="Login" />
            <OutputClaim ClaimTypeReferenceId="hrd_NamespaceType" PartnerClaimType="NameSpaceType" />
            <OutputClaim ClaimTypeReferenceId="hrd_InternalLoginHint" PartnerClaimType="Login" />
            <OutputClaim ClaimTypeReferenceId="hrd_IsConsumerDomain" PartnerClaimType="ConsumerDomain" DefaultValue="False" />
            <OutputClaim ClaimTypeReferenceId="hrd_IsViralDomain" PartnerClaimType="IsViral" DefaultValue="False" />
            <OutputClaim ClaimTypeReferenceId="hrd_InternalLoginHint" PartnerClaimType="Login" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="SetManaged" />
            <OutputClaimsTransformation ReferenceId="SetFederated" />
            <OutputClaimsTransformation ReferenceId="SetIsViralOrConsumer" />
            <OutputClaimsTransformation ReferenceId="SetIsManagedOrFederated" />
            <OutputClaimsTransformation ReferenceId="SetNotViralOrConsumer" />
            <OutputClaimsTransformation ReferenceId="SetIsAAD" />
          </OutputClaimsTransformations>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>
    <ClaimsProvider>
      <DisplayName>Local Account SignIn</DisplayName>
      <TechnicalProfiles>
        <!-- <TechnicalProfile Id="login-NonInteractive">
          <Metadata>
            <Item Key="client_id">c229c0b7-c6d1-401c-a3ca-0e4fbc1da831</Item>
            <Item Key="IdTokenAudience">e7f1755c-8fee-4d52-8a71-c4718319cdc8</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="client_id" DefaultValue="c229c0b7-c6d1-401c-a3ca-0e4fbc1da831" />
            <InputClaim ClaimTypeReferenceId="resource_id" PartnerClaimType="resource" DefaultValue="e7f1755c-8fee-4d52-8a71-c4718319cdc8" />
          </InputClaims>
        </TechnicalProfile> -->
        <TechnicalProfile Id="SelfAsserted-HRD">
          <DisplayName>Local Account Signin</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="SignUpTarget">SignUpWithLogonEmailExchange</Item>
            <Item Key="setting.operatingMode">Email</Item>
            <Item Key="ContentDefinitionReferenceId">api.selfasserted</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="signInName" DefaultValue="{OIDC:LoginHint}" />
            <!-- <InputClaim ClaimTypeReferenceId="idp" /> -->
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="signInName" Required="true" />
            <OutputClaim ClaimTypeReferenceId="password" Required="true" />
            <OutputClaim ClaimTypeReferenceId="objectId" />
            <OutputClaim ClaimTypeReferenceId="authenticationSource" />
            <!-- <OutputClaim ClaimTypeReferenceId="idp" /> -->
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="login-NonInteractive" />
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-AAD" />
        </TechnicalProfile>
        <TechnicalProfile Id="HintedSelfAsserted-LocalAccountSignin-Email">
          <DisplayName>Hinted Local Account Signin</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="SignUpTarget">SignUpWithLogonEmailExchange</Item>
            <Item Key="setting.operatingMode">Email</Item>
            <Item Key="ContentDefinitionReferenceId">api.selfasserted</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="signInName" DefaultValue="{OIDC:LoginHint}" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="signInName" Required="true" />
            <OutputClaim ClaimTypeReferenceId="password" Required="true" />
            <OutputClaim ClaimTypeReferenceId="objectId" />
            <OutputClaim ClaimTypeReferenceId="authenticationSource" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="login-NonInteractive" />
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-AAD" />
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>
  </ClaimsProviders>
</TrustFrameworkPolicy>